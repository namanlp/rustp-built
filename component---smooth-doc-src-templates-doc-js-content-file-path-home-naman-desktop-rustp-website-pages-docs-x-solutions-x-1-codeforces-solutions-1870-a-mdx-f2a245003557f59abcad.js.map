{"version":3,"file":"component---smooth-doc-src-templates-doc-js-content-file-path-home-naman-desktop-rustp-website-pages-docs-x-solutions-x-1-codeforces-solutions-1870-a-mdx-f2a245003557f59abcad.js","mappings":"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","sources":["webpack://website/./pages/docs/X Solutions/X.1 Codeforces Solutions/1870A.mdx","webpack://website/../smooth-doc/src/templates/doc.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {SEO} from \"smooth-doc/src/components/SEO\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    p: \"p\",\n    h2: \"h2\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"a-mexanized-array\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#a-mexanized-array\",\n    \"aria-label\": \"a mexanized array permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"A. MEXanized Array\"), \"\\n\", React.createElement(_components.p, null, \"and solution of this problem with proof in Rust Language\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"introduction\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#introduction\",\n    \"aria-label\": \"introduction permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Introduction\"), \"\\n\", React.createElement(_components.p, null, \"In this article, we will see my solution to the codeforces problem, \", React.createElement(_components.a, {\n    href: \"https://codeforces.com/contest/1870/problem/A\"\n  }, \"1870A. MEXanized Array\"), \", which came in Codeforces CodeTON Round 6 (Div. 1 + Div. 2, Rated, Prizes!).\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Note :\"), \" My Solution might not be the most optimized one, but it is certainly working.\"), \"\\n\", React.createElement(_components.p, null, \"You can go to above link to view the question statement.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"approach\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#approach\",\n    \"aria-label\": \"approach permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Approach\"), \"\\n\", React.createElement(_components.p, null, \"In this problem, we can create a vector of integers, and push all the elements from 0 to mex-1. Then, we have to push maximum element, which is not mex.\"), \"\\n\", React.createElement(_components.p, null, \"Then, we check if all the conditions satisfy. If yes, we find the sum of the array and print it. Else, we print -1.\"), \"\\n\", React.createElement(_components.p, null, \"It is basically a Brute Force Approach, and uses O(N) time and space complexity, ( I know it can be achieved in O(1) too)\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"proof\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#proof\",\n    \"aria-label\": \"proof permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Proof\"), \"\\n\", React.createElement(_components.p, null, \"We must include all the elements less than mex at least once. Also, we check all the conditions.\\nHence, we can proof that this is correct answer.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"program\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#program\",\n    \"aria-label\": \"program permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Program\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-rust\"\n  }, \"/*\\nThis template is made by Naman Garg <naman.rustp@gmail.com>\\nGitHub : https://github.com/namanlp\\nGitLab : https://gitlab.com/namanlp\\nWebsite : https://rustp.org\\n\\nYou can visit https://rustp.org/basic-programs/basic-template/\\nfor understanding the template\\n\\nFeel free to copy the template, but not the solutions :D\\nThank You\\n */\\n\\n#![allow(unused)]\\n\\nuse std::io::stdin;\\n\\nfn take_int() -> usize {\\n    let mut input = String::new();\\n    stdin().read_line(&mut input).unwrap();\\n    return input.trim().parse().unwrap();\\n}\\n\\nfn take_vector() -> Vec<usize> {\\n    let mut input = String::new();\\n    stdin().read_line(&mut input).unwrap();\\n    let arr: Vec<usize> = input.trim().split_whitespace().map(|x| x.parse().unwrap()).collect();\\n    return arr;\\n}\\n\\nfn take_string() -> Vec<char> {\\n    let mut input = String::new();\\n    stdin().read_line(&mut input).unwrap();\\n    let vec: Vec<char> = input.trim().chars().collect();\\n    return vec;\\n}\\n\\nfn to_string(vec: Vec<char>) -> String { return vec.iter().collect::<String>(); }\\n\\nfn solve() {\\n// ======================= Code Here =========================\\n    let n_k_x = take_vector();\\n    let n = n_k_x[0];\\n    let k = n_k_x[1];\\n    let x = n_k_x[2];\\n\\n    let mut arr = Vec::new();\\n\\n    if x+1 < k { println!(\\\"-1\\\"); return; }\\n\\n    for i in 0..k {\\n        arr.push(i);\\n    }\\n\\n    while arr.len() < n {\\n        if x == k {\\n            arr.push(x-1);\\n        }\\n        else {\\n            arr.push(x);\\n        }\\n    }\\n\\n    if arr.len() > n{ println!(\\\"-1\\\"); return; }\\n\\n    let mut sum =0;\\n\\n    for i in arr {\\n        sum += i;\\n    }\\n    println!(\\\"{}\\\", sum);\\n}\\n\\n\\npub fn main() {\\n    let t = take_int();\\n    for _ in 0..t { solve(); }\\n}\\n\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"conclusion\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#conclusion\",\n    \"aria-label\": \"conclusion permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Conclusion\"), \"\\n\", React.createElement(_components.p, null, \"In this article, we discussed solution to Codeforces problem 1870A. MEXanized Array along with proof and program in Rust Language.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Thank You\")), \"\\n\", \"\\n\", React.createElement(SEO, {\n    title: \"Codeforces 1870A solution with proof - Rust Programming\",\n    description: \"In this article, we will discuss solution to Codeforces problem 1870A MEXanized Array along with proof.\",\n    img: \"https://rustp.org/Static_Images_DND/Social/Codeforces/Codeforces_1870A_Social.png\"\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/naman/Desktop/rustp/website/pages/docs/X Solutions/X.1 Codeforces Solutions/1870A.mdx\";\nimport {graphql} from 'gatsby';\nexport const pageQuery = graphql`\n  query DocPageQuery($id: String!) {\n    mdx(id: { eq: $id }) {\n      fields {\n        pageType\n        title\n        editLink\n      }\n      tableOfContents\n    }\n  }\n`;\nfunction DocTemplate({children}) {\n  return children;\n}\nDocTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DocTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","div","p","h2","strong","pre","code","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","SEO","title","description","img","MDXLayout","wrapper","DocTemplate","children","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}