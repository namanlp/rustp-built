{"version":3,"file":"component---smooth-doc-src-templates-doc-js-content-file-path-home-naman-desktop-rustp-website-pages-docs-5-algorithms-5-1-array-algorithms-prefix-sum-array-mdx-70cd1b40caa4b78cb823.js","mappings":"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","sources":["webpack://website/./pages/docs/5 Algorithms/5.1 Array Algorithms/Prefix-Sum-Array.mdx","webpack://website/../smooth-doc/src/templates/doc.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {SEO} from \"smooth-doc/src/components/SEO\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    p: \"p\",\n    h2: \"h2\",\n    strong: \"strong\",\n    code: \"code\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"prefix-sum-array\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#prefix-sum-array\",\n    \"aria-label\": \"prefix sum array permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Prefix Sum Array\"), \"\\n\", React.createElement(_components.p, null, \"and their interesting properties along with implementation in Rust Language\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"introduction\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#introduction\",\n    \"aria-label\": \"introduction permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Introduction\"), \"\\n\", React.createElement(_components.p, null, \"Prefix Sum Array is widely used in Competitive Programming for optimizing the solution, generally in arrays or vectors.\\nUsing Prefix Sum Array, we can perform Range Queries in \", React.createElement(_components.strong, null, \"constant, or O(1)\"), \" time complexity.\"), \"\\n\", React.createElement(_components.p, null, \"In this article, we will discuss some interesting properties of prefix sum array, and see the code in Rust Language to build a prefix sum array.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Definition :\"), \" Prefix sum array, \", React.createElement(_components.code, null, \"p\"), \" of an array \", React.createElement(_components.code, null, \"a\"), \" is defined such that every index of array \", React.createElement(_components.code, null, \"p\"), \", contains sum of all elements of \", React.createElement(_components.code, null, \"a\"), \" upto that index.\"), \"\\n\", React.createElement(_components.p, null, \"Formally, for all \", React.createElement(_components.code, null, \"0 <= i < N\"), \",\"), \"\\n\", React.createElement(_components.p, null, \"p[i] = a[0] + a[1] + a[2]... + a[i-1] + a[i]\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"interesting-properties\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#interesting-properties\",\n    \"aria-label\": \"interesting properties permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Interesting properties\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"i\", React.createElement(\"sup\", null, \"th\"), \" element of prefix sum array, p[i] = a[i]+p[i-1],  for all \", React.createElement(_components.code, null, \"1 <= i < n\")), \"\\n\", React.createElement(_components.li, null, \"Prefix sum array of positive elements is \", React.createElement(_components.strong, null, \"always sorted\"), \", in ascending order.\"), \"\\n\", React.createElement(_components.li, null, \"If there are common element in prefix array, this means that sum of the subarray between them is 0.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"generate-prefix-array\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#generate-prefix-array\",\n    \"aria-label\": \"generate prefix array permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Generate Prefix Array\"), \"\\n\", React.createElement(_components.p, null, \"Here is the function to generate a prefix array in Rust Language.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-rust\"\n  }, \"fn prefix_sum(array:&Vec<usize>)->Vec<usize>{\\n\\n    // Initialize the array with all 0\\n    let mut prefix_array = vec![0; array.len()];\\n\\n    // First element of prefix array is first element of array\\n    prefix_array[0] = array[0];\\n\\n    // Generate prefix array using property\\n    // p[i] = a[i] + p[i-1]\\n    for i in 1..array.len() {\\n        prefix_array[i] = prefix_array[i-1]+array[i];\\n    }\\n\\n    return prefix_array;\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"With driver code\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-rust\"\n  }, \"fn prefix_sum(array:&Vec<usize>)->Vec<usize>{\\n\\n    // Initialize the array with all 0\\n    let mut prefix_array = vec![0; array.len()];\\n\\n    // First element of prefix array is first element of array\\n    prefix_array[0] = array[0];\\n\\n    // Generate prefix array using property\\n    // p[i] = a[i] + p[i-1]\\n    for i in 1..array.len() {\\n        prefix_array[i] = prefix_array[i-1]+array[i];\\n    }\\n\\n    return prefix_array;\\n}\\n\\n// Driver code\\n\\nfn main() {\\n    let arr = vec![1, 2, 3, 4, 5, 6, 7];\\n    println!(\\\"{:?}\\\", prefix_sum(&arr));\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Output\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"[1, 3, 6, 10, 15, 21, 28]\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Time Complexity : O( n )\"), \" \", React.createElement(\"br\"), \"\\n\", React.createElement(_components.strong, null, \"Space Complexity : O( n )\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"uses-of-prefix-sum-array\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#uses-of-prefix-sum-array\",\n    \"aria-label\": \"uses of prefix sum array permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Uses of Prefix Sum Array\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Range Queries :\"), \" By using prefix sum array, the Range Queries such as find sum of elements from [l, r] can be done in constant or \", React.createElement(_components.strong, null, \"O(1)\"), \" time complexity.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Subarray with 0 sum :\"), \" In prefix array, if there is any repeating element, that means that the sum of that subarray is 0.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"and so on...\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"conclusion\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#conclusion\",\n    \"aria-label\": \"conclusion permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Conclusion\"), \"\\n\", React.createElement(_components.p, null, \"Prefix Sum Array is widely used in Competitive Programming for optimizing the solution, generally in arrays or vectors.\"), \"\\n\", React.createElement(_components.p, null, \"In this article, we discussed various properties and applications of prefix sum array and saw how to implement it in Rust Language.\"), \"\\n\", React.createElement(_components.p, null, \"Here is the function for easy access\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-rust\"\n  }, \"fn prefix_sum(array:&Vec<usize>)->Vec<usize>{\\n    let mut prefix_array = vec![0; array.len()];\\n    prefix_array[0] = array[0];\\n    for i in 1..array.len() { prefix_array[i] = prefix_array[i-1]+array[i]; }\\n    return prefix_array;\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Thank You\")), \"\\n\", \"\\n\", React.createElement(SEO, {\n    title: \"Prefix Sum Array - Rust Programming\",\n    description: \"Prefix sum array is frequently used to optimize the solution. In this article, we will see various properties and applications of prefix sum array and see how to implement it in Rust Language\"\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/naman/Desktop/rustp/website/pages/docs/5 Algorithms/5.1 Array Algorithms/Prefix-Sum-Array.mdx\";\nimport {graphql} from 'gatsby';\nexport const pageQuery = graphql`\n  query DocPageQuery($id: String!) {\n    mdx(id: { eq: $id }) {\n      fields {\n        pageType\n        title\n        editLink\n      }\n      tableOfContents\n    }\n  }\n`;\nfunction DocTemplate({children}) {\n  return children;\n}\nDocTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DocTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","div","p","h2","strong","code","h3","ol","li","pre","blockquote","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","SEO","title","description","MDXLayout","wrapper","DocTemplate","children","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}