"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[742],{53328:function(e,t,n){n.r(t),n.d(t,{default:function(){return m}});var l=n(27378),a=n(20951),r=n(88957);function c(e){var t=Object.assign({h1:"h1",a:"a",div:"div",p:"p",h2:"h2",strong:"strong",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",code:"code",pre:"pre",blockquote:"blockquote"},(0,a.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(t.h1,{id:"factorial-of-a-number",style:{position:"relative"}},l.createElement(t.a,{href:"#factorial-of-a-number","aria-label":"factorial of a number permalink",className:"anchor before"},l.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Factorial Of A Number"),"\n",l.createElement(t.p,null,"And Program in Rust to find the factorial of a number"),"\n",l.createElement(t.h2,{id:"what-is-factorial-of-a-number",style:{position:"relative"}},l.createElement(t.a,{href:"#what-is-factorial-of-a-number","aria-label":"what is factorial of a number permalink",className:"anchor before"},l.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"What is Factorial of a number?"),"\n",l.createElement(t.p,null,"Factorial of a whole number is defined as the product of all natural numbers from 1 to the number itself, both inclusive.\nFor example, factorial of ",l.createElement(t.strong,null,"5")," would be"),"\n",l.createElement(t.p,null,"5 × 4 × 3 × 2 × 1 = ",l.createElement(t.strong,null,"120")),"\n",l.createElement(t.p,null,"It is denoted using symbol exclamation mark, i.e., '!'. So, ",l.createElement(t.strong,null,"5! = 120"),". or 120 is factorial of 5."),"\n",l.createElement(t.p,null,"Interestingly, factorial of 0 is 1 or ",l.createElement(t.strong,null,"0! = 1")),"\n",l.createElement(t.p,null,"Factorials of number upto 15 are"),"\n",l.createElement(t.table,null,l.createElement(t.thead,null,l.createElement(t.tr,null,l.createElement(t.th,null,"Number"),l.createElement(t.th,null,"Factorial"),l.createElement(t.th),l.createElement(t.th))),l.createElement(t.tbody,null,l.createElement(t.tr,null,l.createElement(t.td,null,"0"),l.createElement(t.td,null,"1"),l.createElement(t.td),l.createElement(t.td)),l.createElement(t.tr,null,l.createElement(t.td,null,"1"),l.createElement(t.td,null,"1"),l.createElement(t.td),l.createElement(t.td)),l.createElement(t.tr,null,l.createElement(t.td,null,"2"),l.createElement(t.td,null,"2"),l.createElement(t.td),l.createElement(t.td)),l.createElement(t.tr,null,l.createElement(t.td,null,"3"),l.createElement(t.td,null,"6"),l.createElement(t.td),l.createElement(t.td)),l.createElement(t.tr,null,l.createElement(t.td,null,"4"),l.createElement(t.td,null,"24"),l.createElement(t.td),l.createElement(t.td)),l.createElement(t.tr,null,l.createElement(t.td,null,"5"),l.createElement(t.td,null,"120"),l.createElement(t.td),l.createElement(t.td)),l.createElement(t.tr,null,l.createElement(t.td,null,"6"),l.createElement(t.td,null,"720"),l.createElement(t.td),l.createElement(t.td)),l.createElement(t.tr,null,l.createElement(t.td,null,"7"),l.createElement(t.td,null,"5040"),l.createElement(t.td),l.createElement(t.td)),l.createElement(t.tr,null,l.createElement(t.td,null,"8"),l.createElement(t.td,null,"40320"),l.createElement(t.td),l.createElement(t.td)),l.createElement(t.tr,null,l.createElement(t.td,null,"9"),l.createElement(t.td,null,"362880"),l.createElement(t.td),l.createElement(t.td)),l.createElement(t.tr,null,l.createElement(t.td,null,"10"),l.createElement(t.td,null,"3628800"),l.createElement(t.td),l.createElement(t.td)),l.createElement(t.tr,null,l.createElement(t.td,null,"11"),l.createElement(t.td,null,"39916800"),l.createElement(t.td),l.createElement(t.td)),l.createElement(t.tr,null,l.createElement(t.td,null,"12"),l.createElement(t.td,null,"479001600"),l.createElement(t.td),l.createElement(t.td)),l.createElement(t.tr,null,l.createElement(t.td,null,"13"),l.createElement(t.td,null,"6227020800"),l.createElement(t.td),l.createElement(t.td)),l.createElement(t.tr,null,l.createElement(t.td,null,"14"),l.createElement(t.td,null,"87178291200"),l.createElement(t.td),l.createElement(t.td)),l.createElement(t.tr,null,l.createElement(t.td,null,"15"),l.createElement(t.td,null,"1307674368000"),l.createElement(t.td),l.createElement(t.td)))),"\n",l.createElement("br"),"\n",l.createElement("br"),"\n",l.createElement(t.p,null,"As you can see, factorial of a number grows very fast. For example,\n",l.createElement(t.strong,null,"40! = 8.15×10⁴⁷ , which is so large that no numerical data structure in rust can store this value.")),"\n",l.createElement(t.p,null,"Before discussing how to store it, let's see some properties of factorial"),"\n",l.createElement(t.h2,{id:"properties-of-factorial-of-a-number",style:{position:"relative"}},l.createElement(t.a,{href:"#properties-of-factorial-of-a-number","aria-label":"properties of factorial of a number permalink",className:"anchor before"},l.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Properties of Factorial of a number"),"\n",l.createElement(t.p,null,"There are just 2 main properties of factorial used in programming"),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"1. n! = n × (n-1)!")),"\n",l.createElement(t.p,null,"For example, 5! = 5 × 4! = 5 × 24 = 120"),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"2. n! = (n+1)! / (n+1)")),"\n",l.createElement(t.p,null,"For example, 5! = 6! / 6 = 720/6 = 120"),"\n",l.createElement(t.h2,{id:"iterative-approach",style:{position:"relative"}},l.createElement(t.a,{href:"#iterative-approach","aria-label":"iterative approach permalink",className:"anchor before"},l.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Iterative Approach"),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Note :")," We will take maximum integer data type in rust, that is ",l.createElement(t.code,null,"i128")," so that we can find factorial of the largest number possible to store"),"\n",l.createElement(t.p,null,"It is the simplest method, just take the number, and multiply it with all the natural numbers less than it."),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-rust"},"fn factorial(number : i128) -> i128{\n\n    // initialize factorial to 1, explicitly type i128\n    let mut factorial : i128 = 1;\n\n    // Multiply factorial by all numbers from 1 to the given number\n    for i in 1..(number+1) {\n        factorial*=i;\n    }\n\n    // Return factorial\n    return factorial\n}\n")),"\n",l.createElement(t.p,null,"Program with Driver Code"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-rust"},'use std::io::stdin;\n\nfn factorial(number : i128) -> i128{\n\n    // initialize factorial to 1, explicitly type i128\n    let mut factorial : i128 = 1;\n\n    // Multiply factorial by all numbers from 1 to the given number\n    for i in 1..(number+1) {\n        factorial*=i;\n    }\n\n    // Return factorial\n    return factorial\n}\n\n// Driver Code\n\npub fn main() {\n    // Read and parse number to i128\n    let mut input = String::new();\n    stdin().read_line(&mut input).unwrap();\n    let number : i128 = input.trim().parse().unwrap();\n\n    // Find and print factorial\n    let factorial = factorial(number);\n    println!("Factorial of {} is : {}", number,  factorial);\n}\n')),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Output")),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,"20 ",l.createElement("br"),"\nFactorial of 20 is : 2432902008176640000"),"\n"),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Time Complexity : O(n)")," ",l.createElement("br"),"\n",l.createElement(t.strong,null,"Space Complexity : O(1)")),"\n",l.createElement(t.h2,{id:"recursive-approach",style:{position:"relative"}},l.createElement(t.a,{href:"#recursive-approach","aria-label":"recursive approach permalink",className:"anchor before"},l.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Recursive Approach"),"\n",l.createElement(t.p,null,"In this, we compute the factorial using property of factorial ",l.createElement(t.strong,null,"n! = n × (n-1)!")),"\n",l.createElement(t.p,null,"So, we find the factorial of n by computing the factorial of n-1 recursively. Factorial of 0 and 1 are 1, as already known. Program is"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-rust"},"fn factorial_recursive(number : i128) -> i128{\n\n    // Base Case\n    if number<=1 {\n        return 1;\n    }\n\n    // Recursive Case\n    return number * factorial_recursive(number-1);\n}\n")),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Output")),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.p,null,"20 ",l.createElement("br"),"\nFactorial of 20 is : 2432902008176640000"),"\n"),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Time Complexity : O(n)")," ",l.createElement("br"),"\n",l.createElement(t.strong,null,"Space Complexity : O(n)")),"\n",l.createElement(t.p,null,"( Space complexity is O(n) because all the intermediate are stored in stack memory till factorial of n-1 is found. )"),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Note :")," Iterative approach is more efficient than recursive approach !"),"\n",l.createElement(t.h2,{id:"conclusion",style:{position:"relative"}},l.createElement(t.a,{href:"#conclusion","aria-label":"conclusion permalink",className:"anchor before"},l.createElement(t.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Conclusion"),"\n",l.createElement(t.p,null,"This article covers the basic definition factorial, properties and simple functions to find factorial of a number in Rust in both Iterative and Recursive manner."),"\n",l.createElement(t.p,null,"Here is function for easy access"),"\n",l.createElement(t.pre,null,l.createElement(t.code,{className:"language-rust"},"fn factorial(number : i128) -> i128{\n    let mut factorial : i128 = 1;\n    for i in 1..(number+1) {\n        factorial*=i;\n    }\n    return factorial\n}\n")),"\n",l.createElement(t.p,null,"Factorial of Larger Numbers and array will be covered in the coming articles."),"\n",l.createElement(t.p,null,l.createElement(t.strong,null,"Thank You")),"\n","\n",l.createElement(r.H,{title:"Factorial Of a Number - Rust Programming",description:"Factorial is an important value of a number. This article covers the basic definition factorial, properties and simple functions to find factorial of a number in Rust in both Iterative and Recursive manner"}))}var i=function(e){void 0===e&&(e={});var t=Object.assign({},(0,a.ah)(),e.components).wrapper;return t?l.createElement(t,e,l.createElement(c,e)):c(e)};function o(e){return e.children}function m(e){return l.createElement(o,e,l.createElement(i,e))}}}]);
//# sourceMappingURL=component---smooth-doc-src-templates-doc-js-content-file-path-home-naman-desktop-rustp-website-pages-docs-3-combinatorics-factorial-of-number-mdx-c640ea2deebf348501b7.js.map