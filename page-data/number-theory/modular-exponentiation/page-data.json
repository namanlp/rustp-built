{"componentChunkName":"component---smooth-doc-src-templates-doc-js-content-file-path-home-naman-desktop-rustp-website-pages-docs-number-theory-2-1-modular-exponentiation-mdx","path":"/number-theory/modular-exponentiation/","result":{"data":{"mdx":{"fields":{"pageType":"doc","title":"Modular Exponentiation","editLink":"https://github.com/namanlp/rustp/edit/main/website/pages/docs/Number Theory/2.1-Modular-Exponentiation.mdx"},"tableOfContents":{"items":[{"url":"#modular-exponentiation-in-rust","title":"Modular Exponentiation in Rust","items":[{"url":"#what-is-modular-exponentiation","title":"What is Modular Exponentiation"},{"url":"#problem-statement","title":"Problem statement"},{"url":"#naive-approach","title":"Naive Approach"},{"url":"#efficient-divide-and-conquer-solution","title":"Efficient Divide and Conquer solution","items":[{"url":"#approach","title":"Approach"},{"url":"#algorithm","title":"Algorithm"}]},{"url":"#program-for-modular-exponentiation-in-rust","title":"Program for Modular Exponentiation in Rust"},{"url":"#conclusion","title":"Conclusion"}]}]}}},"pageContext":{"id":"58bf7622-0433-5d22-affa-3d8e33295d10","frontmatter":{"title":"Modular Exponentiation","section":"2.1 Arithmetic Operations","order":2,"slug":"/number-theory/modular-exponentiation/","description":"Modular exponentiation is very frequently used concept in competitive programming. Here is the program for modular exponentiation in rust in logarithmic time complexity instead of linear using Divide and Conquer."},"contentFilePath":"/home/naman/Desktop/rustp/website/pages/docs/Number Theory/2.1-Modular-Exponentiation.mdx"}},"staticQueryHashes":["1122327541","1339625561","148928582","2140385554","4275725850"]}