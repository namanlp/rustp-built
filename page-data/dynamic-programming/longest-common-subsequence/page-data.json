{"componentChunkName":"component---smooth-doc-src-templates-doc-js-content-file-path-home-naman-desktop-rustp-website-pages-docs-5-algorithms-5-2-dynamic-programming-longest-common-subsequence-mdx","path":"/dynamic-programming/longest-common-subsequence/","result":{"data":{"mdx":{"fields":{"pageType":"doc","title":"Longest Common Subsequence","editLink":"https://github.com/namanlp/rustp/edit/main/website/pages/docs/5 Algorithms/5.2 Dynamic Programming/Longest-Common-Subsequence.mdx"},"tableOfContents":{"items":[{"url":"#longest-common-subsequence--lcs-","title":"Longest Common Subsequence ( LCS )","items":[{"url":"#introduction","title":"Introduction"},{"url":"#recursive-solution","title":"Recursive Solution","items":[{"url":"#algorithm","title":"Algorithm"},{"url":"#function","title":"Function"}]},{"url":"#overlapping-sub-problems","title":"Overlapping Sub-problems"},{"url":"#memoization--dynamic-programming--method","title":"Memoization ( Dynamic Programming ) Method","items":[{"url":"#algorithm-1","title":"Algorithm"},{"url":"#function-1","title":"Function"}]},{"url":"#tabulation---dynamic-programming---method","title":"Tabulation  ( Dynamic Programming )  Method"},{"url":"#algorithm-2","title":"Algorithm","items":[{"url":"#function-2","title":"Function"}]},{"url":"#conclude","title":"Conclude"}]}]}}},"pageContext":{"id":"37d6c720-6283-5e67-b620-1d191c612c9e","frontmatter":{"title":"Longest Common Subsequence","section":"5.2 Dynamic Programming","order":1,"slug":"/dynamic-programming/longest-common-subsequence/","description":"In this article, we will see how to find length of Longest Common Subsequence of given strings, first using recursion, and then using dynamic programming methods, Memoization as well as Tabulation, in Rust Language."},"contentFilePath":"/home/naman/Desktop/rustp/website/pages/docs/5 Algorithms/5.2 Dynamic Programming/Longest-Common-Subsequence.mdx"}},"staticQueryHashes":["1122327541","1339625561","148928582","2140385554","4275725850"]}