{"version":3,"file":"component---smooth-doc-src-templates-doc-js-content-file-path-home-naman-desktop-rustp-website-pages-docs-3-combinatorics-permutation-mdx-a6ee15db099a08873be3.js","mappings":"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","sources":["webpack://website/./images/Combinatorics/permutations.webp","webpack://website/./pages/docs/3 Combinatorics/Permutation.mdx","webpack://website/../smooth-doc/src/templates/doc.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/permutations-1affab49d7a857ef46efe65499c88629.webp\";","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport permutation from \"../../../images/Combinatorics/permutations.webp\";\nimport {SEO} from \"smooth-doc/src/components/SEO\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    p: \"p\",\n    h2: \"h2\",\n    strong: \"strong\",\n    em: \"em\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, {\n    id: \"permutation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#permutation\",\n    \"aria-label\": \"permutation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Permutation\"), \"\\n\", React.createElement(_components.p, null, \"and program to find the Permutation in Rust\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"what-is-permutation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#what-is-permutation\",\n    \"aria-label\": \"what is permutation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"What is Permutation\"), \"\\n\", React.createElement(_components.p, null, \"Permutation is the number of ways in which some of the objects from a given set can be \", React.createElement(_components.strong, null, \"chosen and arranged\"), \". In permutation, the order in which things are arranged also matters, unlike in combination.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"For example :\"), \" Permutation of word RUST are RSTU, RSUT, RTSU, RTUS ..... 24 ways\"), \"\\n\", React.createElement(_components.p, null, \"If you want to read more about what Permutation means, I would recommend you to read from any High School Mathematics book of your preference.\"), \"\\n\", React.createElement(_components.p, null, \"In this article, we will use standard reference : the number of total objects to be arranged are denoted by \", React.createElement(_components.strong, null, \"n\"), \" and the number of items chosen at a time are denoted by \", React.createElement(_components.strong, null, \"r\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"So, total number of ways of arranging \", React.createElement(_components.em, null, \"n\"), \" unique items taking \", React.createElement(_components.em, null, \"r\"), \" at a time is written \", React.createElement(_components.strong, null, React.createElement(\"sup\", null, \"n\"), \"P\", React.createElement(\"sub\", null, \"r\")), \". It will also be written as \", React.createElement(_components.strong, null, \"P(n, r)\")), \"\\n\", \"\\n\", React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, React.createElement(\"img\", {\n    src: permutation,\n    width: \"100%\",\n    alt: \"Permutation of RUST\"\n  })), \"\\n\", React.createElement(_components.h2, {\n    id: \"permutation-formulae\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#permutation-formulae\",\n    \"aria-label\": \"permutation formulae permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Permutation formulae\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"when-all-objects-are-distinct\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#when-all-objects-are-distinct\",\n    \"aria-label\": \"when all objects are distinct permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"When all Objects are distinct\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"When repetition is allowed :\"), \" If Repetition of an object is allowed, then we can simply write number of permutations = \", React.createElement(_components.strong, null, \"n\", React.createElement(\"sup\", null, \"r\")), \". We can calculate it using Exponent or Power function.\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"When repetition is not allowed :\"), \" If Repetition of an object is not allowed, then permutations can be written as  \", React.createElement(_components.strong, null, React.createElement(\"sup\", null, \"n\"), \"P\", React.createElement(\"sub\", null, \"r\"), \" = n! / (n-r)!\"), \" We can calculate it using \", React.createElement(_components.a, {\n    href: \"combinatorics/factorial-of-number/\"\n  }, \"Factorial function\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"when-some-objects-are-identical\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#when-some-objects-are-identical\",\n    \"aria-label\": \"when some objects are identical permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"When some objects are identical\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"When repetition is allowed :\"), \" If Repetition of an object is allowed, then we can simply write number of permutations = \", React.createElement(_components.strong, null, \"k\", React.createElement(\"sup\", null, \"r\")), \", where k are total number of unique objects. We can calculate it using Exponent or Power function.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"When repetition is not allowed :\"), \" If repetition is not allowed, but there are \", React.createElement(_components.em, null, \"n\", React.createElement(\"sub\", null, \"1\")), \" identical objects of type 1, \", React.createElement(_components.em, null, \"n\", React.createElement(\"sub\", null, \"2\")), \" objects of type 2 ... \", React.createElement(_components.em, null, \"n\", React.createElement(\"sub\", null, \"k\")), \" objects of type k, then total permutations of all objects are\"), \"\\n\"), \"\\n\", React.createElement(\"center\", null, \" n! / n\", React.createElement(\"sub\", null, \"1\"), \"! × n\", React.createElement(\"sub\", null, \"2\"), \"! × ... n\", React.createElement(\"sub\", null, \"k\"), \"!  \"), \"\\n\", React.createElement(_components.h2, {\n    id: \"program-to-find-permutation\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#program-to-find-permutation\",\n    \"aria-label\": \"program to find permutation permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Program to find Permutation\"), \"\\n\", React.createElement(_components.p, null, \"Now, let us write a program in Rust Language to find the number of permutations when we are given \", React.createElement(_components.em, null, \"n\"), \" distinct objects, and we can arrange \", React.createElement(_components.em, null, \"r\"), \" at a time.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-rust\"\n  }, \"fn permutation(n: i128, r: i128) -> i128{\\n    // nPr = n! / (n-r)!\\n    return factorial(n)/factorial(n-r);\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"With driver code\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-rust\"\n  }, \"\\nfn permutation(n: i128, r: i128) -> i128{\\n    // nPr = n! / (n-r)!\\n    return factorial(n)/factorial(n-r);\\n}\\n\\n// Driver code\\n\\nuse std::io::stdin;\\nfn take_int() -> i128 {\\n    let mut input = String::new();\\n    stdin().read_line(&mut input).unwrap();\\n    return input.trim().parse().unwrap();\\n}\\nfn factorial(number : i128) -> i128{\\n    let mut factorial : i128 = 1;\\n    for i in 1..(number+1) { factorial*=i; }\\n    return factorial;\\n}\\n\\npub fn main() {\\n    let n = take_int();\\n    let r = take_int();\\n    println!(\\\"{}\\\", permutation(n, r));\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Input\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"6 \", React.createElement(\"br\"), \"\\n4\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Output\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"360\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Time Complexity : O( n )\"), \" \", React.createElement(\"br\"), \"\\n\", React.createElement(_components.strong, null, \"Space Complexity : O( 1 )\")), \"\\n\", React.createElement(_components.h2, {\n    id: \"conclusion\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#conclusion\",\n    \"aria-label\": \"conclusion permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Conclusion\"), \"\\n\", React.createElement(_components.p, null, \"Permutation is the number of ways in which some of the objects from a given set can be \", React.createElement(_components.strong, null, \"chosen and arranged.\"), \"\\nIn this article, we saw the formulae for calculating number of permutation for given n and r and also made a program to find number of permutations in Rust.\"), \"\\n\", React.createElement(_components.p, null, \"Here is the function for easy access\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-rust\"\n  }, \"fn factorial(number : i128) -> i128{\\n    let mut factorial : i128 = 1;\\n    for i in 1..(number+1) { factorial*=i; }\\n    return factorial;\\n}\\n\\nfn permutation(n: i128, r: i128) -> i128{\\n    return factorial(n)/factorial(n-r);\\n}\\n\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Thank You\")), \"\\n\", \"\\n\", React.createElement(SEO, {\n    title: \"Permutations - Rust Programming\",\n    description: \"Permutation is the number of ways in which some of the objects from a given set can be chosen and arranged. We will see permutation formulae and also write a program to find number of permutations in Rust.\"\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/home/naman/Desktop/rustp/website/pages/docs/3 Combinatorics/Permutation.mdx\";\nimport {graphql} from 'gatsby';\nexport const pageQuery = graphql`\n  query DocPageQuery($id: String!) {\n    mdx(id: { eq: $id }) {\n      fields {\n        pageType\n        title\n        editLink\n      }\n      tableOfContents\n    }\n  }\n`;\nfunction DocTemplate({children}) {\n  return children;\n}\nDocTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DocTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","a","div","p","h2","strong","em","h3","ol","li","pre","code","blockquote","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","textAlign","src","permutation","width","alt","start","SEO","title","description","MDXLayout","wrapper","DocTemplate","children","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}